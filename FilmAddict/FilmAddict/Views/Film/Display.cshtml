@model Tuple<FilmAddict.Models.FilmModel, FilmAddict.Models.Critics>

@{
    var comments = ViewBag.Comments;
    var genres = ViewBag.Genres;
    var film = ViewBag.film;
}


<div>

    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(tuple => tuple.Item1.Title)
        </dt>

        <dd>
            @Html.DisplayFor(tuple => tuple.Item1.Title)
        </dd>

        <dt>
            @Html.DisplayNameFor(tuple => tuple.Item1.Year)
        </dt>

        <dd>
            @Html.DisplayFor(tuple => tuple.Item1.Year)
        </dd>

        <dt>
            @Html.DisplayNameFor(tuple => tuple.Item1.Duration)
        </dt>

        <dd>
            @Html.DisplayFor(tuple => tuple.Item1.Duration)
        </dd>

        <dt>
            @Html.DisplayNameFor(tuple => tuple.Item1.Country)
        </dt>

        <dd>
            @Html.DisplayFor(tuple => tuple.Item1.Country)
        </dd>

        <dt>
            @Html.DisplayNameFor(tuple => tuple.Item1.Director)
        </dt>

        <dd>
            @Html.DisplayFor(tuple => tuple.Item1.Director)
        </dd>

        <dt>
            @Html.DisplayNameFor(tuple => tuple.Item1.Trailer)
        </dt>
        <br />
        <dd>

            <iframe style="border:2px solid red;" width="560" height="315" src="@Html.DisplayFor(tuple => tuple.Item1.Trailer)"
                    frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>

        </dd>
        <br />
        <dt>
            @Html.DisplayNameFor(tuple => tuple.Item1.Synopsis)
        </dt>

        <dd>
            @Html.DisplayFor(tuple => tuple.Item1.Synopsis)
        </dd>

        <dt>
            @Html.DisplayNameFor(tuple => tuple.Item1.Genres)
        </dt>

        <dd>
            @foreach (var item in genres)
            {
                <span class="badge badge-danger">@item</span>
            }
        </dd>
        <br />
        @foreach (var item in comments)
        {

            <div class="col-sm-11">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <strong>@item.Name</strong>
                    </div>
                    <div class="panel-body">
                        @item.Comment
                    </div>
                </div>
            </div>


        }


</div>


<div style="text-align: center;">
    <button type="button" style="margin: 0 auto;" class="btn btn-danger" data-toggle="modal" data-target="#exampleModal">
        Add comment
    </button>
    </div>

    @using (Html.BeginForm("AddComment", "Film", new { id = Model.Item1.Id }, FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                       
                    </div>
                    <div class="modal-body">
                        <div class="form-group">
                            @Html.LabelFor(tuple => tuple.Item2.Name, htmlAttributes: new { @class = "control-label col-md-2" })

                            @Html.EditorFor(tuple => tuple.Item2.Name, new { htmlAttributes = new { @class = "form-control" }})

                            @Html.ValidationMessageFor(tuple => tuple.Item2.Name, "", new { @class = "text-danger" })

                        </div>
                        <div class="form-group">
                            @Html.LabelFor(tuple => tuple.Item2.Comment, htmlAttributes: new { @class = "control-label col-md-2" })

                            @Html.EditorFor(tuple => tuple.Item2.Comment, new { htmlAttributes = new { @class = "form-control" } })

                            @Html.ValidationMessageFor(tuple => tuple.Item2.Comment, "", new { @class = "text-danger" })
                              
                        </div>


                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        <input type="submit" value="Save" class="btn btn-danger" />
                    </div>
                </div>
            </div>
        </div>


    }


    </dl>







    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
      
